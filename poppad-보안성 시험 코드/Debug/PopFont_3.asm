; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

	TITLE	F:\20120709_Enterprise_CT_V2.0_workspace\kljl\.csdata\src\build\PopFont_3.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

PUBLIC	_PopFontChooseFont
EXTRN	__imp__ChooseFontW@4:PROC
EXTRN	_csut_TFX_CoverageBuffer:DWORD
EXTRN	_csut_TFX_LastProbe:DWORD
_BSS	SEGMENT
_logfont DB	05cH DUP (?)
; Function compile flags: /Odtp /ZI
_BSS	ENDS
;	COMDAT _PopFontChooseFont
_TEXT	SEGMENT
_csut_ret$77151 = -68					; size = 4
_cf$ = -64						; size = 60
_codescroll_12884902736$ = -4				; size = 4
_hwnd$ = 8						; size = 4
_PopFontChooseFont PROC					; COMDAT
; File d:\open source\vs2008\c\poppad3\popfont.c
; Line 14
	push	ebp
	mov	ebp, esp
	sub	esp, 132				; 00000084H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR _csut_TFX_LastProbe
	mov	DWORD PTR [eax], 62			; 0000003eH
	mov	ecx, DWORD PTR _csut_TFX_CoverageBuffer
	mov	BYTE PTR [ecx+62], 49			; 00000031H
	mov	DWORD PTR _codescroll_12884902736$[ebp], 0
; Line 17
	mov	DWORD PTR _cf$[ebp], 60			; 0000003cH
; Line 18
	mov	eax, DWORD PTR _hwnd$[ebp]
	mov	DWORD PTR _cf$[ebp+4], eax
; Line 19
	mov	DWORD PTR _cf$[ebp+8], 0
; Line 20
	mov	DWORD PTR _cf$[ebp+12], OFFSET _logfont
; Line 21
	mov	DWORD PTR _cf$[ebp+16], 0
; Line 22
	mov	DWORD PTR _cf$[ebp+20], 321		; 00000141H
; Line 23
	mov	DWORD PTR _cf$[ebp+24], 0
; Line 24
	mov	DWORD PTR _cf$[ebp+28], 0
; Line 25
	mov	DWORD PTR _cf$[ebp+32], 0
; Line 26
	mov	DWORD PTR _cf$[ebp+36], 0
; Line 27
	mov	DWORD PTR _cf$[ebp+40], 0
; Line 28
	mov	DWORD PTR _cf$[ebp+44], 0
; Line 29
	xor	eax, eax
	mov	WORD PTR _cf$[ebp+48], ax
; Line 30
	mov	DWORD PTR _cf$[ebp+52], 0
; Line 31
	mov	DWORD PTR _cf$[ebp+56], 0
; Line 33
	lea	eax, DWORD PTR _cf$[ebp]
	push	eax
	call	DWORD PTR __imp__ChooseFontW@4
	mov	DWORD PTR _csut_ret$77151[ebp], eax
	mov	eax, DWORD PTR _csut_TFX_LastProbe
	mov	DWORD PTR [eax], 63			; 0000003fH
	mov	ecx, DWORD PTR _csut_TFX_CoverageBuffer
	mov	BYTE PTR [ecx+63], 49			; 00000031H
	mov	eax, DWORD PTR _csut_ret$77151[ebp]
; Line 34
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_PopFontChooseFont ENDP
_TEXT	ENDS
PUBLIC	_PopFontInitialize
EXTRN	__imp__SendMessageW@16:PROC
EXTRN	__imp__CreateFontIndirectW@4:PROC
EXTRN	__imp__GetObjectW@12:PROC
EXTRN	__imp__GetStockObject@4:PROC
_BSS	SEGMENT
_hFont	DD	01H DUP (?)
; Function compile flags: /Odtp /ZI
_BSS	ENDS
;	COMDAT _PopFontInitialize
_TEXT	SEGMENT
_hwndEdit$ = 8						; size = 4
_PopFontInitialize PROC					; COMDAT
; Line 43
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR _csut_TFX_LastProbe
	mov	DWORD PTR [eax], 64			; 00000040H
	mov	ecx, DWORD PTR _csut_TFX_CoverageBuffer
	mov	BYTE PTR [ecx+64], 49			; 00000031H
; Line 45
	push	OFFSET _logfont
	push	92					; 0000005cH
	push	13					; 0000000dH
	call	DWORD PTR __imp__GetStockObject@4
	push	eax
	call	DWORD PTR __imp__GetObjectW@12
; Line 47
	push	OFFSET _logfont
	call	DWORD PTR __imp__CreateFontIndirectW@4
	mov	DWORD PTR _hFont, eax
; Line 48
	push	0
	mov	eax, DWORD PTR _hFont
	push	eax
	push	48					; 00000030H
	mov	ecx, DWORD PTR _hwndEdit$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
	mov	eax, DWORD PTR _csut_TFX_LastProbe
	mov	DWORD PTR [eax], 65			; 00000041H
	mov	ecx, DWORD PTR _csut_TFX_CoverageBuffer
	mov	BYTE PTR [ecx+65], 49			; 00000031H
; Line 49
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_PopFontInitialize ENDP
_TEXT	ENDS
PUBLIC	_PopFontSetFont
EXTRN	__imp__InvalidateRect@12:PROC
EXTRN	__imp__GetClientRect@8:PROC
EXTRN	__imp__DeleteObject@4:PROC
; Function compile flags: /Odtp /ZI
;	COMDAT _PopFontSetFont
_TEXT	SEGMENT
_rect$ = -24						; size = 16
_hFontNew$ = -8						; size = 4
_codescroll_12884902737$ = -4				; size = 4
_hwndEdit$ = 8						; size = 4
_PopFontSetFont PROC					; COMDAT
; Line 58
	push	ebp
	mov	ebp, esp
	sub	esp, 88					; 00000058H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR _csut_TFX_LastProbe
	mov	DWORD PTR [eax], 66			; 00000042H
	mov	ecx, DWORD PTR _csut_TFX_CoverageBuffer
	mov	BYTE PTR [ecx+66], 49			; 00000031H
	mov	DWORD PTR _codescroll_12884902737$[ebp], 0
; Line 62
	push	OFFSET _logfont
	call	DWORD PTR __imp__CreateFontIndirectW@4
	mov	DWORD PTR _hFontNew$[ebp], eax
; Line 63
	push	0
	mov	eax, DWORD PTR _hFontNew$[ebp]
	push	eax
	push	48					; 00000030H
	mov	ecx, DWORD PTR _hwndEdit$[ebp]
	push	ecx
	call	DWORD PTR __imp__SendMessageW@16
; Line 64
	mov	eax, DWORD PTR _hFont
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
; Line 65
	mov	eax, DWORD PTR _hFontNew$[ebp]
	mov	DWORD PTR _hFont, eax
; Line 66
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndEdit$[ebp]
	push	ecx
	call	DWORD PTR __imp__GetClientRect@8
; Line 67
	push	1
	lea	eax, DWORD PTR _rect$[ebp]
	push	eax
	mov	ecx, DWORD PTR _hwndEdit$[ebp]
	push	ecx
	call	DWORD PTR __imp__InvalidateRect@12
	mov	eax, DWORD PTR _csut_TFX_LastProbe
	mov	DWORD PTR [eax], 67			; 00000043H
	mov	ecx, DWORD PTR _csut_TFX_CoverageBuffer
	mov	BYTE PTR [ecx+67], 49			; 00000031H
; Line 68
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_PopFontSetFont ENDP
_TEXT	ENDS
PUBLIC	_PopFontDeinitialize
; Function compile flags: /Odtp /ZI
;	COMDAT _PopFontDeinitialize
_TEXT	SEGMENT
_PopFontDeinitialize PROC				; COMDAT
; Line 77
	push	ebp
	mov	ebp, esp
	sub	esp, 64					; 00000040H
	push	ebx
	push	esi
	push	edi
	mov	eax, DWORD PTR _csut_TFX_LastProbe
	mov	DWORD PTR [eax], 68			; 00000044H
	mov	ecx, DWORD PTR _csut_TFX_CoverageBuffer
	mov	BYTE PTR [ecx+68], 49			; 00000031H
; Line 78
	mov	eax, DWORD PTR _hFont
	push	eax
	call	DWORD PTR __imp__DeleteObject@4
	mov	eax, DWORD PTR _csut_TFX_LastProbe
	mov	DWORD PTR [eax], 69			; 00000045H
	mov	ecx, DWORD PTR _csut_TFX_CoverageBuffer
	mov	BYTE PTR [ecx+69], 49			; 00000031H
; Line 79
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_PopFontDeinitialize ENDP
_TEXT	ENDS
END
